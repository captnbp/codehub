{{- $manualHTTPS := and .Values.proxy.https.enabled (eq .Values.proxy.https.type "manual") -}}
{{- $manualHTTPSwithsecret := and .Values.proxy.https.enabled (eq .Values.proxy.https.type "secret") -}}
{{- $manualHTTPSwithCertificate := and .Values.proxy.https.enabled (eq .Values.proxy.https.type "cert-manager") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "jupyterhub.fullname" . }}-proxy
  labels:
    {{- include "jupyterhub.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "jupyterhub.matchLabels" . | nindent 6 }}
  strategy:
    {{- .Values.proxy.deploymentStrategy | toYaml | trimSuffix "\n" | nindent 4 }}
  template:
    metadata:
      labels:
        {{- /* Changes here will cause the Deployment to restart the pods. */}}
        {{- include "jupyterhub.matchLabels" . | nindent 8 }}
        hub.jupyter.org/network-access-hub: "true"
        hub.jupyter.org/network-access-singleuser: "true"
        {{- if .Values.proxy.labels }}
        {{- .Values.proxy.labels | toYaml | trimSuffix "\n" | nindent 8 }}
        {{- end }}
      annotations:
        # This lets us autorestart when the secret changes!
        checksum/hub-secret: {{ include (print $.Template.BasePath "/hub/secret.yaml") . | sha256sum }}
        checksum/proxy-secret: {{ include (print $.Template.BasePath "/proxy/secret.yaml") . | sha256sum }}
        {{- if .Values.proxy.annotations }}
        {{- .Values.proxy.annotations | toYaml | trimSuffix "\n" | nindent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: 60
      {{- if .Values.scheduling.podPriority.enabled }}
      priorityClassName: {{ template "jupyterhub.fullname" . }}-default-priority
      {{- end }}
      nodeSelector: {{ toJson .Values.proxy.nodeSelector }}
      {{- include "jupyterhub.coreAffinity" . | nindent 6 }}
      {{- if $manualHTTPS }}
{{- include "jupyterhub.imagePullSecrets" . | indent 6 }}
      volumes:
        - name: tls-secret
          secret:
            secretName: {{ template "jupyterhub.fullname" . }}-proxy-manual-tls
      {{- else if or $manualHTTPSwithsecret $manualHTTPSwithCertificate }}
      volumes:
        - name: tls-secret
          secret:
            secretName: {{ .Values.proxy.https.secret.name }}
      {{- end }}
      {{- if .Values.rbac.enabled }}
      serviceAccountName: {{ template "jupyterhub.fullname" . }}-proxy
      {{- end }}
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
        runAsGroup: 65534
        runAsNonRoot: true
      containers:
        - name: chp
          image: {{ .Values.proxy.chp.image.name }}:{{ .Values.proxy.chp.image.tag }}
          command:
            - configurable-http-proxy
            - --ip=0.0.0.0
            - --api-ip=0.0.0.0
            - --api-port=8001
            - --default-target=http://{{ template "jupyterhub.fullname" . }}-hub:8081
            - --error-target=http://{{ template "jupyterhub.fullname" . }}-hub:8081/hub/error
            {{- if $manualHTTPS }}
            - --port=8443
            - --redirect-port=8000
            - --redirect-to=443
            - --ssl-key=/etc/chp/tls/tls.key
            - --ssl-cert=/etc/chp/tls/tls.crt
            {{- else if or $manualHTTPSwithsecret $manualHTTPSwithCertificate }}
            - --port=8443
            - --redirect-port=8000
            - --redirect-to=443
            - --ssl-key=/etc/chp/tls/{{ .Values.proxy.https.secret.key }}
            - --ssl-cert=/etc/chp/tls/{{ .Values.proxy.https.secret.crt }}
            {{- else }}
            - --port=8000
            {{- end }}
            {{- if .Values.debug.enabled }}
            - --log-level=debug
            {{- end }}
          {{- if or $manualHTTPS $manualHTTPSwithsecret $manualHTTPSwithCertificate }}
          volumeMounts:
            - name: tls-secret
              mountPath: /etc/chp/tls
              readOnly: true
          {{- end }}
          resources:
            {{- .Values.proxy.chp.resources | toYaml | trimSuffix "\n" | nindent 12 }}
          securityContext:
            # Don't allow any process to execute as root inside the container
            allowPrivilegeEscalation: false
            privileged: false
            capabilities:
              drop:
                - ALL
          env:
            - name: CONFIGPROXY_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  {{- if .Values.hub.existingSecret }}
                  name: {{ .Values.hub.existingSecret }}
                  {{- else }}
                  name: {{ template "jupyterhub.fullname" . }}-hub-secret
                  {{- end }}
                  key: proxy.token
          {{- with .Values.proxy.chp.image.pullPolicy }}
          imagePullPolicy: {{ . }}
          {{- end }}
          ports:
            {{- if or $manualHTTPS $manualHTTPSwithsecret $manualHTTPSwithCertificate }}
            - containerPort: 8443
              name: proxy-https
            {{- end }}
            - containerPort: 8000
              name: proxy-public
            - containerPort: 8001
              name: api
          {{- if .Values.proxy.chp.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.proxy.chp.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.proxy.chp.livenessProbe.periodSeconds }}
            httpGet:
              path: /_chp_healthz
              {{- if or $manualHTTPS $manualHTTPSwithsecret $manualHTTPSwithCertificate }}
              port: proxy-https
              scheme: HTTPS
              {{- else }}
              port: proxy-public
              scheme: HTTP
              {{- end }}
          {{- end }}
          {{- if .Values.proxy.chp.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.proxy.chp.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.proxy.chp.readinessProbe.periodSeconds }}
            httpGet:
              path: /_chp_healthz
              {{- if or $manualHTTPS $manualHTTPSwithsecret $manualHTTPSwithCertificate }}
              port: proxy-https
              scheme: HTTPS
              {{- else }}
              port: proxy-public
              scheme: HTTP
              {{- end }}
          {{- end }}
